<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>煨酒小童</title>
  <icon>https://lililib.github.io/icon.png</icon>
  <subtitle>小童</subtitle>
  <link href="https://lililib.github.io/atom.xml" rel="self"/>
  
  <link href="https://lililib.github.io/"/>
  <updated>2025-08-30T16:22:50.868Z</updated>
  <id>https://lililib.github.io/</id>
  
  <author>
    <name>煨酒小童</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>姑苏印象</title>
    <link href="https://lililib.github.io/%E5%A7%91%E8%8B%8F%E5%8D%B0%E8%B1%A1/"/>
    <id>https://lililib.github.io/%E5%A7%91%E8%8B%8F%E5%8D%B0%E8%B1%A1/</id>
    <published>2025-08-30T14:27:59.000Z</published>
    <updated>2025-08-30T16:22:50.868Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;&lt;img src=&quot;/%E5%A7%91%E8%8B%8F%E5%8D%B0%E8%B1%A1/DSC_0314.jpg&quot; alt=&quot;琵琶&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="Diary" scheme="https://lililib.github.io/categories/Diary/"/>
    
    
    <category term="摄影" scheme="https://lililib.github.io/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>网文为啥这么单调</title>
    <link href="https://lililib.github.io/%E7%BD%91%E6%96%87%E4%B8%BA%E5%95%A5%E6%80%8E%E4%B9%88%E5%8D%95%E8%B0%83/"/>
    <id>https://lililib.github.io/%E7%BD%91%E6%96%87%E4%B8%BA%E5%95%A5%E6%80%8E%E4%B9%88%E5%8D%95%E8%B0%83/</id>
    <published>2025-08-25T02:04:17.000Z</published>
    <updated>2025-08-30T14:27:13.417Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近又上头看了一本小说《宠魅》。常常都是感觉无聊的时候，在别人评论区推荐下心血来潮找的一本。&lt;/p&gt;
&lt;p&gt;然而过程常常是这样：前大概150章的时候非常上头，剧情非常吸引人，然后后面剧情开始重复，套路开始明显，开始厌倦，只想快速看完，赶紧结束，再之后就是跳文、跳章，快进的结尾,直至弃文放弃。&lt;/p&gt;
&lt;p&gt;虽然其中有我不休息连续看好几个小时的原因，但主要原因还是剧情重复枯燥。&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://lililib.github.io/categories/Diary/"/>
    
    
    <category term="阅读" scheme="https://lililib.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>《变身》Emergence </title>
    <link href="https://lililib.github.io/%E3%80%8A%E5%8F%98%E8%BA%AB%E3%80%8BEmergence%20/"/>
    <id>https://lililib.github.io/%E3%80%8A%E5%8F%98%E8%BA%AB%E3%80%8BEmergence%20/</id>
    <published>2025-07-28T14:42:33.000Z</published>
    <updated>2025-07-28T16:33:51.734Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;



&lt;h3 id=&quot;初见变身&quot;&gt;&lt;a href=&quot;#初见变身&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="book" scheme="https://lililib.github.io/categories/book/"/>
    
    
    <category term="漫画" scheme="https://lililib.github.io/tags/%E6%BC%AB%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>几张漫画遮脸图</title>
    <link href="https://lililib.github.io/%E5%87%A0%E5%BC%A0%E6%BC%AB%E7%94%BB%E9%81%AE%E8%84%B8%E5%9B%BE/"/>
    <id>https://lililib.github.io/%E5%87%A0%E5%BC%A0%E6%BC%AB%E7%94%BB%E9%81%AE%E8%84%B8%E5%9B%BE/</id>
    <published>2025-07-06T03:34:03.000Z</published>
    <updated>2025-07-06T03:48:58.425Z</updated>
    
    
    <summary type="html">&lt;p&gt;刷煎蛋的时候碰到的几个印象深刻的热图，前两张都是短短2小时00破百的图，不过不到一天就下架了。只存了两张这个遮脸系列总感觉少了点，今年又发现了后面两张图，感觉也不错，就一起记录记录。还是动漫娘化了可爱(●’◡’●)&lt;/p&gt;</summary>
    
    
    
    <category term="日常" scheme="https://lililib.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="日常" scheme="https://lililib.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>idea启动 报java: 找不到符号</title>
    <link href="https://lililib.github.io/idea%E5%90%AF%E5%8A%A8%20%E6%8A%A5java%20%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7/"/>
    <id>https://lililib.github.io/idea%E5%90%AF%E5%8A%A8%20%E6%8A%A5java%20%E6%89%BE%E4%B8%8D%E5%88%B0%E7%AC%A6%E5%8F%B7/</id>
    <published>2025-06-30T08:41:36.000Z</published>
    <updated>2025-07-06T03:26:20.817Z</updated>
    
    
    <summary type="html">&lt;p&gt;maven install不报错,代码编辑框不爆红,唯独idea启动项目报lombok相关的找不到符号,可以试试升级lombok至最新版&lt;/p&gt;</summary>
    
    
    
    <category term="work" scheme="https://lililib.github.io/categories/work/"/>
    
    
    <category term="idea" scheme="https://lililib.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>自定义基础镜像</title>
    <link href="https://lililib.github.io/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F/"/>
    <id>https://lililib.github.io/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F/</id>
    <published>2025-06-26T04:28:07.000Z</published>
    <updated>2025-07-06T03:14:45.692Z</updated>
    
    
    <summary type="html">&lt;p&gt;下载精简版jdk8镜像,会有很多工具不存在,如curl,vim,ping啥的,下载完整版jdk8又有太多不必要的工具,太臃肿了,所有自定义镜像的需求就来了&lt;/p&gt;</summary>
    
    
    
    <category term="docker" scheme="https://lililib.github.io/categories/docker/"/>
    
    
    <category term="技术" scheme="https://lililib.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>k8s部署xxl-job</title>
    <link href="https://lililib.github.io/k8s%E9%83%A8%E7%BD%B2xxl-job/"/>
    <id>https://lililib.github.io/k8s%E9%83%A8%E7%BD%B2xxl-job/</id>
    <published>2025-06-16T06:43:32.000Z</published>
    <updated>2025-07-06T03:14:45.672Z</updated>
    
    
    <summary type="html">&lt;p&gt;xxl-job是个很好用的定时任务调度器,记录下部署过程&lt;/p&gt;
&lt;p&gt;第一步看官方文档&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.xuxueli.com/xxl-job&quot;&gt;https://www.xuxueli.com/xxl-job&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="work" scheme="https://lililib.github.io/categories/work/"/>
    
    
    <category term="k8s" scheme="https://lililib.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>xxl-job锁超时</title>
    <link href="https://lililib.github.io/xxl-job%E9%94%81%E8%B6%85%E6%97%B6/"/>
    <id>https://lililib.github.io/xxl-job%E9%94%81%E8%B6%85%E6%97%B6/</id>
    <published>2025-06-16T02:59:41.000Z</published>
    <updated>2025-07-06T03:14:45.690Z</updated>
    
    
    <summary type="html">&lt;p&gt;xxl-job-admin启动的时候一直报Lock wait timeout exceeded; try restarting transaction&lt;/p&gt;
&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs mipsasm&quot;&gt;&lt;span class=&quot;hljs-symbol&quot;&gt;com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException:&lt;/span&gt; Lock &lt;span class=&quot;hljs-keyword&quot;&gt;wait &lt;/span&gt;timeout exceeded&lt;span class=&quot;hljs-comment&quot;&gt;; try restarting transaction&lt;/span&gt;&lt;br&gt;	&lt;span class=&quot;hljs-built_in&quot;&gt;at&lt;/span&gt; com.mysql.cj.&lt;span class=&quot;hljs-keyword&quot;&gt;jdbc.exceptions.SQLError.createSQLException(SQLError.java:124)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;/span&gt;	&lt;span class=&quot;hljs-built_in&quot;&gt;at&lt;/span&gt; com.mysql.cj.&lt;span class=&quot;hljs-keyword&quot;&gt;jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;/span&gt;	&lt;span class=&quot;hljs-built_in&quot;&gt;at&lt;/span&gt; com.mysql.cj.&lt;span class=&quot;hljs-keyword&quot;&gt;jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;/span&gt;	&lt;span class=&quot;hljs-built_in&quot;&gt;at&lt;/span&gt; com.mysql.cj.&lt;span class=&quot;hljs-keyword&quot;&gt;jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;/span&gt;	&lt;span class=&quot;hljs-built_in&quot;&gt;at&lt;/span&gt; com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.&lt;span class=&quot;hljs-keyword&quot;&gt;java:44)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;/span&gt;	&lt;span class=&quot;hljs-built_in&quot;&gt;at&lt;/span&gt; com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.&lt;span class=&quot;hljs-keyword&quot;&gt;java)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;/span&gt;	&lt;span class=&quot;hljs-built_in&quot;&gt;at&lt;/span&gt; com.xxl.&lt;span class=&quot;hljs-keyword&quot;&gt;job.admin.core.thread.JobScheduleHelper$1.run(JobScheduleHelper.java:74)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&lt;/span&gt;	&lt;span class=&quot;hljs-built_in&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;java.lang.Thread.run(Thread.java:748)&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;估计是我不小心admin实例起了太多的原因,解决办法就是关闭所有admin实例,删除xxl所有表,再重新搞一遍&lt;/p&gt;</summary>
    
    
    
    <category term="work" scheme="https://lililib.github.io/categories/work/"/>
    
    
    <category term="mysql" scheme="https://lililib.github.io/tags/mysql/"/>
    
    <category term="xxl-job" scheme="https://lililib.github.io/tags/xxl-job/"/>
    
  </entry>
  
  <entry>
    <title>navicate的数据迁移</title>
    <link href="https://lililib.github.io/navicate%E7%9A%84%E7%BB%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BD%AC%E7%A7%BB/"/>
    <id>https://lililib.github.io/navicate%E7%9A%84%E7%BB%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BD%AC%E7%A7%BB/</id>
    <published>2025-06-07T02:51:56.000Z</published>
    <updated>2025-07-06T03:14:45.674Z</updated>
    
    
    <summary type="html">&lt;p&gt;&amp;emsp;新到的这家公司分库分表做的很多,一个库就有3000多张表.还有好几个库.调试bug定位数据的时候简直让人心肺骤停.总是怀疑刚刚滑过的表名是不是错过了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/navicate%E7%9A%84%E7%BB%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BD%AC%E7%A7%BB/image-20250607125856009.png&quot; alt=&quot;image-20250607125856009&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="软件" scheme="https://lililib.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="技术" scheme="https://lililib.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>《铳梦》</title>
    <link href="https://lililib.github.io/%E3%80%8A%E9%93%B3%E6%A2%A6%E3%80%8B/"/>
    <id>https://lililib.github.io/%E3%80%8A%E9%93%B3%E6%A2%A6%E3%80%8B/</id>
    <published>2024-02-25T09:45:01.000Z</published>
    <updated>2024-02-25T11:18:56.256Z</updated>
    
    
    <summary type="html">&lt;p&gt;机缘巧合之下知道了&lt;a href=&quot;https://www.manhuagui.com/comic/6779/&quot;&gt;《铳梦》&lt;/a&gt;这个漫画，看到煎蛋热评魔幻的世界观给了小时po主十足的震撼后，心痒难耐于是周六看了这部漫画，总共九部，每部二百多页出头的样子。耗时接近9个小时看完，废寝忘食。很有当初看《剑豪生死斗》时的沉迷。以我看了太多诡异世界观的作品后猎奇眼光来看，世界观的构造，冲突的发展，社会面貌的描写。只能说打个10分打个7分的样子。但是毕竟作者1995年就画完了，相信之前看的很多作品有借鉴过这个作品。要是更早遇到这个漫画一定更加能够打动我。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/%E3%80%8A%E9%93%B3%E6%A2%A6%E3%80%8B/Snipaste_2024-02-25_12-58-30.png&quot; alt=&quot;第一次在煎蛋热榜看到这两个图&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/%E3%80%8A%E9%93%B3%E6%A2%A6%E3%80%8B/Snipaste_2024-02-25_12-58-41.png&quot; alt=&quot;Snipaste_2024-02-25_12-58-41&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://lililib.github.io/categories/Diary/"/>
    
    
    <category term="漫画" scheme="https://lililib.github.io/tags/%E6%BC%AB%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>springboot项目报Command line is too long. Shorten the command line via</title>
    <link href="https://lililib.github.io/springboot%E9%A1%B9%E7%9B%AE%E6%8A%A5Command%20line%20is%20too%20long/"/>
    <id>https://lililib.github.io/springboot%E9%A1%B9%E7%9B%AE%E6%8A%A5Command%20line%20is%20too%20long/</id>
    <published>2024-02-21T03:23:46.000Z</published>
    <updated>2024-02-21T11:55:21.038Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ruoyi-common-encrypt包的使用.md</title>
    <link href="https://lililib.github.io/ruoyi-common-encrypt%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://lililib.github.io/ruoyi-common-encrypt%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2024-02-01T01:40:49.000Z</published>
    <updated>2024-02-02T05:38:16.011Z</updated>
    
    
    <summary type="html">&lt;p&gt;公司有个业务用户看一条广告，就往自己钱包里面添加相应的金额。自己通过抓包，可以重放请求或直接构造金额给后端。因为参数没有加密，活在惶恐之中。虽然用的用户不多，但总怕有人抓包搞事情。遂看有没有现成的加密轮子。&lt;a href=&quot;https://gitee.com/dromara/RuoYi-Cloud-Plus/tree/2.X/ruoyi-common/ruoyi-common-encrypt&quot;&gt;ruoyi-common-encrypt&lt;/a&gt;就是一个现成的。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>如何用hexo优雅的写博客</title>
    <link href="https://lililib.github.io/%E5%A6%82%E4%BD%95%E7%94%A8hexo%E4%BC%98%E9%9B%85%E7%9A%84%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
    <id>https://lililib.github.io/%E5%A6%82%E4%BD%95%E7%94%A8hexo%E4%BC%98%E9%9B%85%E7%9A%84%E5%86%99%E5%8D%9A%E5%AE%A2/</id>
    <published>2024-01-30T05:41:19.000Z</published>
    <updated>2024-02-21T07:18:10.335Z</updated>
    
    
    <summary type="html">&lt;p&gt;hexo静态博客优点就是完全白嫖github。不需要一分钱就可以有一个自己的博客。&lt;/p&gt;
&lt;p&gt;记录记录如何优雅的写博客用了哪些工具。&lt;/p&gt;</summary>
    
    
    
    <category term="折腾" scheme="https://lililib.github.io/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="hexo" scheme="https://lililib.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>github提交403错误</title>
    <link href="https://lililib.github.io/github%E6%8F%90%E4%BA%A4403%E9%94%99%E8%AF%AF/"/>
    <id>https://lililib.github.io/github%E6%8F%90%E4%BA%A4403%E9%94%99%E8%AF%AF/</id>
    <published>2024-01-29T09:55:01.000Z</published>
    <updated>2024-02-01T01:56:51.793Z</updated>
    
    
    <summary type="html">&lt;dl&gt;&lt;dt&gt;自己有梯子还是git push失败&lt;/dt&gt;&lt;dd&gt;Failed to connect to github.com port 443 after 21068 ms: Couldn’t connect to server&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;先确认网页github能不能正常打开，如果可以正常打开。说明命令行在拉取&amp;#x2F;推送代码时并没有使用梯子进行代理&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="git" scheme="https://lililib.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>httpcanary抓包</title>
    <link href="https://lililib.github.io/httpcanary%E6%8A%93%E5%8C%85/"/>
    <id>https://lililib.github.io/httpcanary%E6%8A%93%E5%8C%85/</id>
    <published>2024-01-29T09:06:45.000Z</published>
    <updated>2024-01-30T03:51:03.991Z</updated>
    
    
    <summary type="html">&lt;p&gt;记录下httpcanary的配置过程。接口调试中求人不如求己，自己抓包一目了然&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="抓包" scheme="https://lililib.github.io/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>IDEA运行flikcdc的相关问题</title>
    <link href="https://lililib.github.io/IDEA%E8%BF%90%E8%A1%8Cflikcdc%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://lililib.github.io/IDEA%E8%BF%90%E8%A1%8Cflikcdc%E7%9A%84%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</id>
    <published>2024-01-05T06:55:48.000Z</published>
    <updated>2024-01-30T03:51:03.989Z</updated>
    
    
    <summary type="html">&lt;p&gt;按照官方文档跑&lt;a href=&quot;https://ververica.github.io/flink-cdc-connectors/master/content/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/datastream-api-package-guidance-zh.html&quot;&gt;Demo&lt;/a&gt;一直报错，记录一些错误&lt;/p&gt;
&lt;h3 id=&quot;错误1&quot;&gt;&lt;a href=&quot;#错误1&quot; class=&quot;headerlink&quot; title=&quot;错误1&quot;&gt;&lt;/a&gt;错误1&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Exception in thread &amp;quot;main&amp;quot; java.lang.NoClassDefFoundError: org/apache/flink/api/java/typeutils/ResultTypeQueryable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;解决1：去掉pom文件中的   &lt;code&gt;&amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&lt;/code&gt;  代码&lt;/p&gt;
&lt;p&gt;解决2：配置modify run configuraton-&amp;gt;modify options-&amp;gt;add dependencies with “provided” scope to classpath&lt;/p&gt;</summary>
    
    
    
    <category term="IDEA，Flink" scheme="https://lililib.github.io/categories/IDEA%EF%BC%8CFlink/"/>
    
    
    <category term="技术" scheme="https://lililib.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>window常用命令</title>
    <link href="https://lililib.github.io/window%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://lililib.github.io/window%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2024-01-02T12:21:49.000Z</published>
    <updated>2024-01-30T03:51:04.012Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;记录使用电脑过程中经常查的一些记录&quot;&gt;&lt;a href=&quot;#记录使用电脑过程中经常查的一些记录&quot; class=&quot;headerlink&quot; title=&quot;记录使用电脑过程中经常查的一些记录&quot;&gt;&lt;/a&gt;记录使用电脑过程中经常查的一些记录&lt;/h2&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://lililib.github.io/categories/Diary/"/>
    
    
    <category term="windows" scheme="https://lililib.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>游戏记录</title>
    <link href="https://lililib.github.io/%E6%B8%B8%E6%88%8F%E8%AE%B0%E5%BD%95/"/>
    <id>https://lililib.github.io/%E6%B8%B8%E6%88%8F%E8%AE%B0%E5%BD%95/</id>
    <published>2024-01-02T03:28:26.000Z</published>
    <updated>2024-01-30T03:51:03.695Z</updated>
    
    
    <summary type="html">&lt;p&gt;记录好玩的游戏，有时候忘记名称了，又是花费很多时间来重新找&lt;/p&gt;</summary>
    
    
    
    <category term="游戏" scheme="https://lililib.github.io/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="生活" scheme="https://lililib.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="game" scheme="https://lililib.github.io/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>《瓦尔登湖》-自知之明</title>
    <link href="https://lililib.github.io/%E3%80%8A%E7%93%A6%E5%B0%94%E7%99%BB%E6%B9%96%E3%80%8B-%E8%87%AA%E7%9F%A5%E4%B9%8B%E6%98%8E/"/>
    <id>https://lililib.github.io/%E3%80%8A%E7%93%A6%E5%B0%94%E7%99%BB%E6%B9%96%E3%80%8B-%E8%87%AA%E7%9F%A5%E4%B9%8B%E6%98%8E/</id>
    <published>2023-12-31T05:50:41.000Z</published>
    <updated>2024-01-30T03:51:03.493Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;和我们的自知之明相比较，公众舆论这暴戾的君主也显得微弱无力。正是一个人怎么看待自己，决定了此人的命运，也指向了他的归宿&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;从出生那一刻起，就开始接收信息，学习信息。我们的社群教导我们是非，善恶，遵守社会规则，与人合作….。这些林林总总构成了我么的价值观 ，最后形成我们的人格。常常说一个人具有时代的局限性，是因为他接受的是他旧时的社会理念。今天人们随声附和或默认为真理的，明天就可能被证明是错误的</summary>
    
    
    
    <category term="读书笔记" scheme="https://lililib.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="阅读" scheme="https://lililib.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
    <category term="标注" scheme="https://lililib.github.io/tags/%E6%A0%87%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>第二个老板</title>
    <link href="https://lililib.github.io/%E7%AC%AC%E4%BA%8C%E4%B8%AA%E8%80%81%E6%9D%BF/"/>
    <id>https://lililib.github.io/%E7%AC%AC%E4%BA%8C%E4%B8%AA%E8%80%81%E6%9D%BF/</id>
    <published>2023-12-30T07:59:13.000Z</published>
    <updated>2025-07-06T03:14:45.692Z</updated>
    
    
    <summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;翻了一下我过去随手记得日记，很惊讶，点点滴滴的文字中我竟然写下了那么多事情。站在在我现在的角度来看，我这一年的经历似乎很是平淡。但从日记的字里行间我看到很多情绪，不满，紧张，懊悔，愤怒，生气，冷漠都充斥着我大脑，促使我在事后记下这些东西。其中来到苏州的第一个公司还是让我感觉值得回顾回顾&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://lililib.github.io/categories/Diary/"/>
    
    
    <category term="生活" scheme="https://lililib.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>排骨做法</title>
    <link href="https://lililib.github.io/%E6%8E%92%E9%AA%A8%E5%81%9A%E6%B3%95/"/>
    <id>https://lililib.github.io/%E6%8E%92%E9%AA%A8%E5%81%9A%E6%B3%95/</id>
    <published>2023-12-30T07:26:31.000Z</published>
    <updated>2024-01-30T03:51:03.201Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h2 id=&quot;蒸排骨&quot;&gt;&lt;a href=&quot;#蒸排骨&quot; class=&quot;headerlink&quot; title=&quot;蒸排骨&quot;&gt;&lt;/a&gt;蒸排骨&lt;/h2&gt;&lt;div class=&quot;note note-success&quot;&gt;
           </summary>
        
      
    
    
    
    <category term="Diary" scheme="https://lililib.github.io/categories/Diary/"/>
    
    
    <category term="菜谱" scheme="https://lililib.github.io/tags/%E8%8F%9C%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>aaaaaa</title>
    <link href="https://lililib.github.io/aaaa%20%E6%B5%8B%E8%AF%95hexo/"/>
    <id>https://lililib.github.io/aaaa%20%E6%B5%8B%E8%AF%95hexo/</id>
    <published>2023-12-29T12:38:25.000Z</published>
    <updated>2025-07-06T03:14:45.672Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;文章内容&lt;/p&gt;
&lt;h3 id=&quot;这是一些测试&quot;&gt;&lt;a href=&quot;#这是一些测试&quot; class=&quot;headerlink&quot; title=&quot;这是一些测试&quot;&gt;&lt;/a&gt;这是一些测试&lt;/h3&gt;&lt;div class=&quot;note note-success&quot;&gt;
           </summary>
        
      
    
    
    
    
    <category term="游戏" scheme="https://lililib.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>cemu模拟器马里奥3d世界摸屏幕</title>
    <link href="https://lililib.github.io/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E9%A9%AC%E9%87%8C%E5%A5%A53d%E4%B8%96%E7%95%8C%E6%91%B8%E5%B1%8F%E5%B9%95/"/>
    <id>https://lililib.github.io/cemu%E6%A8%A1%E6%8B%9F%E5%99%A8%E9%A9%AC%E9%87%8C%E5%A5%A53d%E4%B8%96%E7%95%8C%E6%91%B8%E5%B1%8F%E5%B9%95/</id>
    <published>2023-12-29T12:38:25.000Z</published>
    <updated>2024-01-30T03:51:02.732Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;玩到抽屉山脉 摸一摸，吹一吹时，捣鼓了好久不知道怎么模拟触摸屏幕，搜了一大圈在一个腌臜角落有人提了一嘴原来用鼠标点击就可以。控制器模拟&lt;/p&gt;
&lt;p&gt;Wii U GamePad鼠标直接点击即可，模拟吹气下面有选项。&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
    <category term="游戏" scheme="https://lililib.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>windows查找端口占用</title>
    <link href="https://lililib.github.io/windows%E6%9F%A5%E6%89%BE%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
    <id>https://lililib.github.io/windows%E6%9F%A5%E6%89%BE%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</id>
    <published>2023-12-29T12:38:25.000Z</published>
    <updated>2024-01-30T03:51:03.402Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ol&gt;
&lt;li&gt;起因当我在一个窗口使用&lt;code&gt;adb devices&lt;/code&gt; 时报&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;adb devicesadb server is out of date. </summary>
        
      
    
    
    
    
    <category term="windows" scheme="https://lililib.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>windows远程桌面与安卓远程控制</title>
    <link href="https://lililib.github.io/windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E4%B8%8E%E5%AE%89%E5%8D%93%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>https://lililib.github.io/windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E4%B8%8E%E5%AE%89%E5%8D%93%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/</id>
    <published>2023-12-28T05:28:46.000Z</published>
    <updated>2024-02-28T05:32:08.460Z</updated>
    
    
    <summary type="html">&lt;p&gt;发现一个内网穿透软件，多个设备组建成局域网。清晰度要比向日葵好很多，还可以用qtScrapy远程操控安卓手机。&lt;/p&gt;
&lt;p&gt;原理大概是:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/40816201&quot;&gt;udp打洞&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="工具" scheme="https://lililib.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>es ik分词器词库热更新</title>
    <link href="https://lililib.github.io/es%E7%9A%84ik%E5%88%86%E8%AF%8D%E5%99%A8%E8%AF%8D%E5%BA%93%E7%83%AD%E6%9B%B4%E6%96%B0/"/>
    <id>https://lililib.github.io/es%E7%9A%84ik%E5%88%86%E8%AF%8D%E5%99%A8%E8%AF%8D%E5%BA%93%E7%83%AD%E6%9B%B4%E6%96%B0/</id>
    <published>2023-12-05T14:18:35.000Z</published>
    <updated>2024-01-30T03:51:02.749Z</updated>
    
    
    <summary type="html">&lt;p&gt;近来遇到一个es查询商品使用ik分词器，召回结果不准确的问题，比如搜索 洗衣液，返回出洁厕液。选择的分词方式是 ik_max_word.出现的原因是分词会把“液”这个单字分开进行索引所以查询错误。如果不想要这个“液”单独分出来需要设置停止词库&lt;/p&gt;
&lt;p&gt;常用词库:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/goto456/stopwords&quot;&gt;百度停用词表等&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.toolnb.com/tools/scelto.html&quot;&gt;搜狗词库转换scel转换工具&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>本地文件夹提交到github</title>
    <link href="https://lililib.github.io/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E6%8F%90%E4%BA%A4%E5%88%B0github/"/>
    <id>https://lililib.github.io/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E6%8F%90%E4%BA%A4%E5%88%B0github/</id>
    <published>2023-09-06T15:29:01.000Z</published>
    <updated>2024-01-30T03:51:02.840Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;一-先在github上建立一个仓库&quot;&gt;&lt;a href=&quot;#一-先在github上建立一个仓库&quot; class=&quot;headerlink&quot; title=&quot;一. 先在github上建立一个仓库&quot;&gt;&lt;/a&gt;一. 先在github上建立一个仓库&lt;/h3&gt;&lt;p&gt;​      </summary>
        
      
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="git" scheme="https://lililib.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>《火星编年史》</title>
    <link href="https://lililib.github.io/%E3%80%8A%E7%81%AB%E6%98%9F%E7%BC%96%E5%B9%B4%E5%8F%B2%E3%80%8B/"/>
    <id>https://lililib.github.io/%E3%80%8A%E7%81%AB%E6%98%9F%E7%BC%96%E5%B9%B4%E5%8F%B2%E3%80%8B/</id>
    <published>2023-07-30T14:17:21.000Z</published>
    <updated>2024-01-30T03:51:03.403Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;火星是太空的遥远之滨，人们像浪潮一般朝它涌去。每一股浪潮都互不相同，一股强过一股。第一股浪潮载的是一些习惯于太空、寒冷和孤寂的人，具有虎狼精神的人，身体强悍，面容清癯，目光炯炯，手板粗实，什么都敢碰，火星无力抵抗这些生来习惯住在火星开阔的平地和荒原的人。他们来到火星，带来了生气，别的人也会有勇气效法。他们在空窗格上嵌上玻璃，在玻璃背后点上灯火.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;2023-6-16-12-33&quot;&gt;&lt;a href=&quot;#2023-6-16-12-33&quot; class=&quot;headerlink&quot; title=&quot;2023.6.16 12:33&quot;&gt;&lt;/a&gt;&lt;em&gt;2023.6.16 12:33&lt;/em&gt;&lt;br&gt;</summary>
    
    
    
    <category term="读书笔记" scheme="https://lililib.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="阅读" scheme="https://lililib.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
    <category term="标注" scheme="https://lililib.github.io/tags/%E6%A0%87%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>《间客》</title>
    <link href="https://lililib.github.io/%E3%80%8A%E9%97%B4%E5%AE%A2%E3%80%8B/"/>
    <id>https://lililib.github.io/%E3%80%8A%E9%97%B4%E5%AE%A2%E3%80%8B/</id>
    <published>2023-06-30T13:16:21.000Z</published>
    <updated>2024-01-30T03:51:03.498Z</updated>
    
    
    <summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;最希望选举程序成本高昂的是权贵，这样穷人就得不到被选举权；最希望司法程序费用高昂的是权贵，这样穷人就打不赢官司；最希望媒体版面费高昂的也是权贵，这样穷人就得不到话语权&lt;/p&gt;</summary>
    
    
    
    <category term="读书笔记" scheme="https://lililib.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="阅读" scheme="https://lililib.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
    <category term="标注" scheme="https://lililib.github.io/tags/%E6%A0%87%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>IP转数字</title>
    <link href="https://lililib.github.io/IP%E8%BD%AC%E6%95%B0%E5%AD%97/"/>
    <id>https://lililib.github.io/IP%E8%BD%AC%E6%95%B0%E5%AD%97/</id>
    <published>2023-02-19T10:46:46.000Z</published>
    <updated>2024-01-30T03:51:02.636Z</updated>
    
    
    <summary type="html">&lt;p&gt;255.255.255.255 直接以字符串存入数据库使用varchar(15),而ipv4本质是32位的二进制码，int也有32位，但是因为有一个符号位存不下所以只能用long型来存储ip了。8个字节还是比15个字节差不多省了一半空间了。&lt;/p&gt;
&lt;p&gt;0xFF，这代表的是十六进制数FF即1111 1111，对应十进制即为255，当一个数n对这个 0xFF 作 &amp;amp; 操作时，相当于求n除以256所得的余数，也就是相当于n%256&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>npm ERR! gyp ERR!</title>
    <link href="https://lililib.github.io/npm%20ERR!%20gyp%20ERR!/"/>
    <id>https://lililib.github.io/npm%20ERR!%20gyp%20ERR!/</id>
    <published>2023-02-19T10:46:46.000Z</published>
    <updated>2024-01-30T03:51:02.762Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;键入&lt;code&gt; npm install --loglevel silly&lt;/code&gt;查看更加详细的错误日志，大概定位错误原因&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过运行验证是否有 VS 构建工具&lt;code&gt;npm config get</summary>
        
      
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="前端" scheme="https://lililib.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>自旋锁与阻塞锁</title>
    <link href="https://lililib.github.io/%E8%87%AA%E6%97%8B%E9%94%81%E4%B8%8E%E9%98%BB%E5%A1%9E%E9%94%81/"/>
    <id>https://lililib.github.io/%E8%87%AA%E6%97%8B%E9%94%81%E4%B8%8E%E9%98%BB%E5%A1%9E%E9%94%81/</id>
    <published>2023-02-12T12:31:46.000Z</published>
    <updated>2024-01-30T03:51:02.856Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在学锁相关的内容，有些内容比较纠结收集了很多资料才建立起锁相关这个体系的轮廓。&lt;/p&gt;
&lt;p&gt;首先是操作系统线程5状态图，java虚拟机也可大致类比。&lt;/p&gt;
&lt;p&gt;首先一个线程从就绪状态到运行状态，从运行状态到阻塞状态都要经过从用户态与内核态之间的切换，这一部比较耗时因为需要经过线程上下文数据的保存。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>sql运行的很慢排查</title>
    <link href="https://lililib.github.io/%E4%B8%80%E6%9D%A1sql%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C%E5%BE%88%E6%85%A2%E6%8E%92%E6%9F%A5/"/>
    <id>https://lililib.github.io/%E4%B8%80%E6%9D%A1sql%E8%AF%AD%E5%8F%A5%E6%89%A7%E8%A1%8C%E5%BE%88%E6%85%A2%E6%8E%92%E6%9F%A5/</id>
    <published>2023-01-06T10:46:46.000Z</published>
    <updated>2024-01-30T03:51:02.794Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;第一类：锁的原因&quot;&gt;&lt;a href=&quot;#第一类：锁的原因&quot; class=&quot;headerlink&quot; title=&quot;第一类：锁的原因&quot;&gt;&lt;/a&gt;第一类：锁的原因&lt;/h2&gt;&lt;p&gt;mysql中有表锁，行锁，一些线程加了锁了之后占有着资源，其他线程再进入进行相关操作就可能一直在等待锁的释放导致感觉sql运行很慢&lt;/p&gt;
&lt;h3 id=&quot;等表锁&quot;&gt;&lt;a href=&quot;#等表锁&quot; class=&quot;headerlink&quot; title=&quot;等表锁&quot;&gt;&lt;/a&gt;等表锁&lt;/h3&gt;&lt;p&gt;如执行 &lt;code&gt;mysql&amp;gt; select * from t where id=1;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;分析原因的时候，一般都是首先执行一下show processlist命令，看看当前语句处于什么状态。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="mysql" scheme="https://lililib.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>《You are Not Late! You are Not Early ！》</title>
    <link href="https://lililib.github.io/%E3%80%8A%20You&#39;re%20Not%20Late!%20You&#39;re%20Not%20Early%20!%E3%80%8B/"/>
    <id>https://lililib.github.io/%E3%80%8A%20You&#39;re%20Not%20Late!%20You&#39;re%20Not%20Early%20!%E3%80%8B/</id>
    <published>2023-01-03T03:43:01.000Z</published>
    <updated>2024-01-30T03:51:03.200Z</updated>
    
    
    <summary type="html">&lt;p&gt;很多时候无意义的焦虑很折磨人，这首诗挺能安慰人的。&lt;/p&gt;
&lt;p&gt;纽约时间比加州时间早三个小时，&lt;br&gt;New York is 3 hours ahead of California,&lt;/p&gt;
&lt;p&gt;但加州时间并没有变慢。&lt;br&gt;but it does not make California slow.&lt;/p&gt;
&lt;p&gt;有人 22 岁就毕业了，&lt;br&gt;Someone graduated at the age of 22,&lt;/p&gt;
&lt;p&gt;但等了五年才找到好的工作！&lt;br&gt;but waited 5 years before securing a good job!&lt;/p&gt;</summary>
    
    
    
    <category term="读书" scheme="https://lililib.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
    <category term="阅读" scheme="https://lililib.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>《未选择的路》</title>
    <link href="https://lililib.github.io/%E3%80%8A%E6%9C%AA%E9%80%89%E6%8B%A9%E7%9A%84%E8%B7%AF%E3%80%8B/"/>
    <id>https://lililib.github.io/%E3%80%8A%E6%9C%AA%E9%80%89%E6%8B%A9%E7%9A%84%E8%B7%AF%E3%80%8B/</id>
    <published>2023-01-03T03:33:01.000Z</published>
    <updated>2024-01-30T03:51:03.200Z</updated>
    
    
    <summary type="html">&lt;p&gt;记得这首诗应该是小学或初中课本上的一首诗。然后几年后又在《球形闪电》上看的了他的引用，那一刻颇受感动，理解了这首诗要表达的感觉。现在很多时候，在我将要面对一些选择的时候我都会情不自禁想起这首诗。&lt;/p&gt;
&lt;p&gt;The Road Not Taken &lt;strong&gt;未 选 择 的 路&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;by Robert Frost （美）弗罗斯特&lt;/p&gt;
&lt;p&gt;Two roads diverged in a yellow wood, 黄色的树林里分出两条路，&lt;/p&gt;
&lt;p&gt;And sorry I could not travel both，可惜我不能同时去涉足，&lt;/p&gt;
&lt;p&gt;And be one traveler, long I stood，我在那路口久久伫立，&lt;/p&gt;</summary>
    
    
    
    <category term="读书" scheme="https://lililib.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
    <category term="阅读" scheme="https://lililib.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>mybatis list实体类存入varchar字段</title>
    <link href="https://lililib.github.io/mybatis%20List%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%AD%98%E5%85%A5varchar%E5%AD%97%E6%AE%B5/"/>
    <id>https://lililib.github.io/mybatis%20List%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%AD%98%E5%85%A5varchar%E5%AD%97%E6%AE%B5/</id>
    <published>2022-12-27T09:43:01.000Z</published>
    <updated>2024-01-30T03:51:02.757Z</updated>
    
    
    <summary type="html">&lt;p&gt;对与采集别人接口数据时，返回格式Json中常常会出现数组类型，如&lt;/p&gt;
&lt;figure class=&quot;highlight elm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs elm&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt;:&amp;quot;&amp;#123;1,4,6,7&amp;#125;&amp;quot;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这时候用jackson去解析数据当然要用List&lt;Integer&gt; type 来封装，但是我们又不想为这个type单独建一个数据表来存储他，就想用一个varchar字段就把这段数组字符串化的存于数据库。用mybatis-plus的话，直接用List 去对应varchar会报错，这时候我们要告诉mybatis如何把List存入varchar了。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="mysql" scheme="https://lililib.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>一张白纸</title>
    <link href="https://lililib.github.io/%E4%B8%80%E5%BC%A0%E7%99%BD%E7%BA%B8/"/>
    <id>https://lililib.github.io/%E4%B8%80%E5%BC%A0%E7%99%BD%E7%BA%B8/</id>
    <published>2022-11-28T10:46:46.000Z</published>
    <updated>2025-07-06T03:14:45.691Z</updated>
    
    
    <summary type="html">&lt;p&gt;零星的只言片语并没有让我对乌鲁木齐的火灾案感同身受。但我看到熊熊的大火从窗户冒出来，一个声嘶力竭的女声阵阵喊着：“开门，快开门呀！”。我很能理解这次多地集会纪念的心情了。&lt;/p&gt;
&lt;p&gt;这里我不谈自己对一个正确的政府是什么样子的看法，仔细想了想，我发现我是一个很矛盾的人，对于言论自由，人身自由我总是想两其害，取其轻。始终得不到一个清晰的边界。经验太少，知识太少，长期国内环境教育这些都制约了我的思考。只能贴一些最符合我现在心情的字眼了。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://lililib.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>springboot单元测试</title>
    <link href="https://lililib.github.io/springBoot%E6%B5%8B%E8%AF%95/"/>
    <id>https://lililib.github.io/springBoot%E6%B5%8B%E8%AF%95/</id>
    <published>2022-11-18T07:07:46.000Z</published>
    <updated>2025-07-06T03:14:45.690Z</updated>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;一直对springboot测试迷迷糊糊的，又搜索了一通资料总结一下&lt;br&gt;要引入两个依赖包&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="springboot" scheme="https://lililib.github.io/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的groupby</title>
    <link href="https://lililib.github.io/mysql%E7%9A%84groupby/"/>
    <id>https://lililib.github.io/mysql%E7%9A%84groupby/</id>
    <published>2022-11-18T03:43:01.000Z</published>
    <updated>2024-01-30T03:51:02.758Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近要写一个根据地区聚合公司数量的需求，一时好久没写，有点忘了，看到一个很不错的博文。记录记录 &lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="mysql" scheme="https://lililib.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>恐怖片与食物链</title>
    <link href="https://lililib.github.io/%E9%A3%9F%E7%89%A9%E9%93%BE/"/>
    <id>https://lililib.github.io/%E9%A3%9F%E7%89%A9%E9%93%BE/</id>
    <published>2022-11-13T08:31:46.000Z</published>
    <updated>2025-07-06T03:14:45.692Z</updated>
    
    
    <summary type="html">&lt;p&gt;作为地球上食物链最顶端的人类，我想到食物链只是….嗯嗯没错！大鱼吃小鱼，小鱼吃虾米。这些名词如果往深处设身处地的想想是非常恐怖的事情。看了一系列自然记录片后才知道我们人类是多么的幸运。&lt;/p&gt;</summary>
    
    
    
    <category term="小记" scheme="https://lililib.github.io/categories/%E5%B0%8F%E8%AE%B0/"/>
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>VR资源获取</title>
    <link href="https://lililib.github.io/VR%E8%B5%84%E6%BA%90%E8%8E%B7%E5%8F%96%E9%80%94%E5%BE%84/"/>
    <id>https://lililib.github.io/VR%E8%B5%84%E6%BA%90%E8%8E%B7%E5%8F%96%E9%80%94%E5%BE%84/</id>
    <published>2022-11-09T04:31:46.000Z</published>
    <updated>2025-07-06T03:14:45.672Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;写在前面：&quot;&gt;&lt;a href=&quot;#写在前面：&quot; class=&quot;headerlink&quot; title=&quot;写在前面：&quot;&gt;&lt;/a&gt;写在前面：&lt;/h4&gt;&lt;p&gt;现在互联网孤岛效应越来越严重了。早期时一切信息都是开放的，可链接的，可触及的。而搜索引擎，就是这个数据库的目录。&lt;/p&gt;
&lt;p&gt;随着大家开始意识到“数据”和“流量”的价值。　渐渐的互联网厂商开始“圈地”，开始由平面向着立体进化，建筑起自己的一个个仓库。互联网的开放性被消解了，开始产生隐私、封闭性和信息壁垒。&lt;br&gt;各个互联网厂商都牢牢把握着自己的数据，以期套牢住自己的用户，因为必要信息有了封闭性，数据就会被圈定在产品之中，你就必须每天都打开它，使用它，久而久之，习惯它，成为它的流量。&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="https://lililib.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>java线程池</title>
    <link href="https://lililib.github.io/java%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    <id>https://lililib.github.io/java%E7%BA%BF%E7%A8%8B%E6%B1%A0/</id>
    <published>2022-10-27T00:43:17.000Z</published>
    <updated>2024-01-30T03:51:02.756Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;为什么要使用线程池？&quot;&gt;&lt;a href=&quot;#为什么要使用线程池？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用线程池？&quot;&gt;&lt;/a&gt;&lt;strong&gt;为什么要使用线程池？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;线程池做的工作主要是控制运行的线程的数量，处理过程中将任务放入队列，然后在线程创建后启动这些任务，如果线程数量超过了最大数量超出数量的线程排队等候，等其它线程执行完毕，再从队列中取出任务来执行。&lt;/p&gt;
&lt;p&gt;线程池主要特点为：线程复用；控制最大并发数；管理线程。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="多线程" scheme="https://lililib.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>java导出word文档</title>
    <link href="https://lililib.github.io/java%E5%AF%BC%E5%87%BAword%E6%96%87%E6%A1%A3/"/>
    <id>https://lililib.github.io/java%E5%AF%BC%E5%87%BAword%E6%96%87%E6%A1%A3/</id>
    <published>2022-10-25T08:38:34.000Z</published>
    <updated>2024-01-30T03:51:02.754Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;准备模板：&quot;&gt;&lt;a href=&quot;#准备模板：&quot; class=&quot;headerlink&quot; title=&quot;准备模板：&quot;&gt;&lt;/a&gt;准备模板：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;先预填写好word文档，比如字体，文字居中，动态扩展表格啥子的。然后选择另存为-&amp;gt;选其他格式-&amp;gt;保存为xml格式。保存后最好再修改后缀为doc，打开看看是否乱码了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/java%E5%AF%BC%E5%87%BAword%E6%96%87%E6%A1%A3/1668158845884.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>写时复制</title>
    <link href="https://lililib.github.io/%E5%86%99%E6%97%B6%E5%A4%8D%E5%88%B6/"/>
    <id>https://lililib.github.io/%E5%86%99%E6%97%B6%E5%A4%8D%E5%88%B6/</id>
    <published>2022-10-20T01:30:42.000Z</published>
    <updated>2024-01-30T03:51:02.802Z</updated>
    
    
    <summary type="html">&lt;h5 id=&quot;1，什么是写时复制-Copy-On-Write-容器？&quot;&gt;&lt;a href=&quot;#1，什么是写时复制-Copy-On-Write-容器？&quot; class=&quot;headerlink&quot; title=&quot;1，什么是写时复制(Copy-On-Write)容器？&quot;&gt;&lt;/a&gt;1，什么是写时复制(Copy-On-Write)容器？&lt;/h5&gt;&lt;p&gt;写时复制是指：在并发访问的情景下，当需要修改JAVA中Containers的元素时，不直接修改该容器，而是先复制一份副本，在副本上进行修改。修改完成之后，将指向原来容器的引用指向新的容器(副本容器)。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>unix IO模型</title>
    <link href="https://lililib.github.io/unix%20Io%E6%A8%A1%E5%9E%8B/"/>
    <id>https://lililib.github.io/unix%20Io%E6%A8%A1%E5%9E%8B/</id>
    <published>2022-10-08T12:31:46.000Z</published>
    <updated>2024-01-30T03:51:02.769Z</updated>
    
    
    <summary type="html">&lt;p&gt;首先I&amp;#x2F;O模型分为&lt;strong&gt;操作系统与设备之间的IO，&lt;/strong&gt;还有&lt;strong&gt;各进程与操作系统之间的I&amp;#x2F;O模型。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;操作系统与设备之间的IO&quot;&gt;&lt;a href=&quot;#操作系统与设备之间的IO&quot; class=&quot;headerlink&quot; title=&quot;操作系统与设备之间的IO&quot;&gt;&lt;/a&gt;&lt;strong&gt;操作系统与设备之间的IO&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;（1）&lt;strong&gt;轮询方式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;CPU主动在各种设备中轮询检查状态，有数据就IO。&lt;/p&gt;
&lt;p&gt;（2）&lt;strong&gt;中断方式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;设备有数据的时候，发出中断，由CPU决定要不要响应中断，然后中断，去处理设备的IO。CPU不用经常轮询设备状态。被动接收中断就行。&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>指令重排</title>
    <link href="https://lililib.github.io/%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92/"/>
    <id>https://lililib.github.io/%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92/</id>
    <published>2022-09-07T12:33:23.000Z</published>
    <updated>2024-01-30T03:51:02.836Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;&lt;strong&gt;引言&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;二狗&lt;/strong&gt;：二胖你昨天请假了是不是又去面试了啊？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二胖&lt;/strong&gt;：别说了我就出去试试水，看看现在工作好不好找，顺带出去找找打击，然后才能好好静下心来好好学习。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二狗：&lt;/strong&gt; 那被打击的怎么样啊？知道自己是什么样的水平了吧，坏笑。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二胖&lt;/strong&gt;：基础太差，一面就让回去等通知了，我要好好学习了，不跟你瞎扯了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二狗:&lt;/strong&gt; 都问了你什么问题啊，把你打击成这样？一起复盘下让我也好好准备下啊。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二胖&lt;/strong&gt;：好吧，你既然这么好奇，那我就大概说下吧，你搬上小板凳仔细挺好了哦。我要开始我的表演了。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>雪花算法</title>
    <link href="https://lililib.github.io/%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95/"/>
    <id>https://lililib.github.io/%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95/</id>
    <published>2022-06-07T11:45:03.000Z</published>
    <updated>2024-01-30T03:51:02.863Z</updated>
    
    
    <summary type="html">&lt;p&gt;snowflake 算法是 twitter 开源的分布式 id 生成算法，采用 Scala 语言实现，是把一个 64 位的 long 型的 id，1 个 bit 是不用的，用其中的 41 bit 作为毫秒数，用 10 bit 作为工作机器 id，12 bit 作为序列号。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Aop 数据库事务控制注解版</title>
    <link href="https://lililib.github.io/Aop%20%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6%E6%B3%A8%E8%A7%A3%E7%89%88/"/>
    <id>https://lililib.github.io/Aop%20%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6%E6%B3%A8%E8%A7%A3%E7%89%88/</id>
    <published>2022-04-18T13:50:00.000Z</published>
    <updated>2024-01-30T03:51:02.635Z</updated>
    
    
    <summary type="html">&lt;p&gt;直接注解通知顺序不一样，？好像是前置，最终，返回，不是很明白。使用环绕通知自己定义通知顺序，不想探究了。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java动态代理</title>
    <link href="https://lililib.github.io/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    <id>https://lililib.github.io/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</id>
    <published>2022-04-18T02:12:06.000Z</published>
    <updated>2024-01-30T03:51:02.754Z</updated>
    
    
    <summary type="html">&lt;p&gt;  小A：“代理模式都有些什么角色？”&lt;/p&gt;
&lt;p&gt;大B：“1、抽象角色（秘书-局长）：声明真实对象和代理对象的共同接口（秘书-局。2、代理角色（秘书）：代理对象角色（秘书）内部含有对真实对象（局长）的引用，从而可以操作真实对象（局长），同时代理对象（秘书）提供与真实对象（局长）相同的接口（秘书-局长）以便在任何时刻都能代替真实对象（局长）。同时，代理对象（秘书）可以在执行真实对象（局长）操作时，附加其他的操作，相当于对真实对象（局长）进行封装。3、真实角色（局长）：代理角色（秘书）所代表的真实对象（局长），是我们最终要引用的对象（局长）。”&lt;/p&gt;
&lt;p&gt;  按功能将代理的组成类分为：标的类、标的接口、拦截类、耦合类&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>长笛女孩节选</title>
    <link href="https://lililib.github.io/%E9%95%BF%E7%AC%9B%E5%A5%B3%E5%AD%A9%E8%8A%82%E9%80%89/"/>
    <id>https://lililib.github.io/%E9%95%BF%E7%AC%9B%E5%A5%B3%E5%AD%A9%E8%8A%82%E9%80%89/</id>
    <published>2022-04-08T01:41:51.000Z</published>
    <updated>2024-01-30T03:51:02.862Z</updated>
    
    
    <summary type="html">&lt;p&gt;长笛女孩在舞台中心就位时，没有人注意她们。在众人看来，她们不过是一对奇异的小人儿，一对互相缠绕的苍白天使。利迪娅把嘴贴在姐姐的喉咙上，感受着在她白得透明的皮肤下快速跳动的动脉。当她用舌头找到姐姐脖子上的小钻孔时，动脉在舌尖抽动了一下。她也感觉到了尼娅的舌头在她喉间湿润的触感，那舌头像小老鼠寻求慰藉一样紧贴着她的皮肤。&lt;/p&gt;</summary>
    
    
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
    <category term="读书" scheme="https://lililib.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>mysql高效批量插入数据</title>
    <link href="https://lililib.github.io/mysql%E9%AB%98%E6%95%88%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE/"/>
    <id>https://lililib.github.io/mysql%E9%AB%98%E6%95%88%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE/</id>
    <published>2022-03-31T02:49:22.000Z</published>
    <updated>2024-01-30T03:51:02.762Z</updated>
    
    
    <summary type="html">&lt;p&gt;举例：向数据表中插入20000条数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库中提供一个goods表。创建如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;TABLE&lt;/span&gt; goods(&lt;br&gt;id &lt;span class=&quot;hljs-type&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PRIMARY&lt;/span&gt; KEY AUTO_INCREMENT,&lt;br&gt;NAME &lt;span class=&quot;hljs-type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;20&lt;/span&gt;)&lt;br&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="mysql" scheme="https://lililib.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>java File类</title>
    <link href="https://lililib.github.io/java%20File%E7%B1%BB/"/>
    <id>https://lililib.github.io/java%20File%E7%B1%BB/</id>
    <published>2022-03-28T12:52:30.000Z</published>
    <updated>2024-01-30T03:51:02.752Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;file-类&quot;&gt;&lt;a href=&quot;#file-类&quot; class=&quot;headerlink&quot; title=&quot;file 类&quot;&gt;&lt;/a&gt;file 类&lt;/h3&gt;&lt;p&gt;![](java File类&amp;#x2F;1648477074671.png)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;![](java File类&amp;#x2F;1648477093771.png)&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>linux概要命令</title>
    <link href="https://lililib.github.io/linux%E6%A6%82%E8%A6%81%E5%91%BD%E4%BB%A4/"/>
    <id>https://lililib.github.io/linux%E6%A6%82%E8%A6%81%E5%91%BD%E4%BB%A4/</id>
    <published>2022-03-27T04:19:57.000Z</published>
    <updated>2024-01-30T03:51:02.757Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;基本介绍&quot;&gt;&lt;a href=&quot;#基本介绍&quot; class=&quot;headerlink&quot; title=&quot;基本介绍&quot;&gt;&lt;/a&gt;基本介绍&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;shutdown –h now 立该进行关机&lt;/li&gt;
&lt;li&gt;shudown -h 1 “hello, 1 分钟后会关机了”&lt;/li&gt;
&lt;li&gt;shutdown –r now 现在重新启动计算机&lt;/li&gt;
&lt;li&gt;halt 关机，作用和上面一样.&lt;/li&gt;
&lt;li&gt;reboot 现在重新启动计算机&lt;/li&gt;
&lt;li&gt;sync 把内存的数据同步到磁盘.&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="linux" scheme="https://lililib.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>vi 和 vim 快捷键</title>
    <link href="https://lililib.github.io/vi%20%E5%92%8C%20vim%20%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://lililib.github.io/vi%20%E5%92%8C%20vim%20%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2022-03-27T04:07:21.000Z</published>
    <updated>2024-01-30T03:51:02.774Z</updated>
    
    
    <summary type="html">&lt;p&gt;Linux 系统会内置 vi 文本编辑器&lt;br&gt;Vim 具有程序编辑的能力，可以看做是 Vi 的增强版本，可以主动的以字体颜色辨别语法的正确性，方便程序设计。&lt;br&gt;  代码补完、编译及错误跳转等方便编程的功能特别丰富&lt;/p&gt;</summary>
    
    
    
    
    <category term="linux" scheme="https://lililib.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux目录结构</title>
    <link href="https://lililib.github.io/linux-mu-lu-jie-gou/"/>
    <id>https://lililib.github.io/linux-mu-lu-jie-gou/</id>
    <published>2022-03-27T03:36:30.000Z</published>
    <updated>2024-01-30T03:51:02.757Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;linux目录结构&quot;&gt;&lt;a href=&quot;#linux目录结构&quot; class=&quot;headerlink&quot; title=&quot;linux目录结构&quot;&gt;&lt;/a&gt;linux目录结构&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&amp;#x2F;bin [常用] (&amp;#x2F;usr&amp;#x2F;bin 、 &amp;#x2F;usr&amp;#x2F;local&amp;#x2F;bin)&lt;br&gt;是 Binary 的缩写, 这个目录存放着最经常使用的命令&lt;/li&gt;
&lt;li&gt;&amp;#x2F;sbin (&amp;#x2F;usr&amp;#x2F;sbin 、 &amp;#x2F;usr&amp;#x2F;local&amp;#x2F;sbin)&lt;br&gt;s 就是 Super User 的意思，这里存放的是系统管理员使用的系统管理程序。&lt;/li&gt;
&lt;li&gt;&amp;#x2F;home [常用]&lt;br&gt;存放普通用户的主目录，在 Linux 中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="linux" scheme="https://lililib.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的Bundle_RPM包安装</title>
    <link href="https://lililib.github.io/MySQL%E7%9A%84Bundle_RPM%E5%8C%85%E5%AE%89%E8%A3%85/"/>
    <id>https://lililib.github.io/MySQL%E7%9A%84Bundle_RPM%E5%8C%85%E5%AE%89%E8%A3%85/</id>
    <published>2022-03-26T13:43:01.000Z</published>
    <updated>2024-01-30T03:51:02.636Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;1-Linux-系统安装MySQL&quot;&gt;&lt;a href=&quot;#1-Linux-系统安装MySQL&quot; class=&quot;headerlink&quot; title=&quot;1. Linux 系统安装MySQL&quot;&gt;&lt;/a&gt;1. Linux 系统安装MySQL&lt;/h3&gt;&lt;h4</summary>
        
      
    
    
    
    
    <category term="linux" scheme="https://lililib.github.io/tags/linux/"/>
    
    <category term="mysql" scheme="https://lililib.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>民族自豪感</title>
    <link href="https://lililib.github.io/%E6%B0%91%E6%97%8F%E8%87%AA%E8%B1%AA%E6%84%9F/"/>
    <id>https://lililib.github.io/%E6%B0%91%E6%97%8F%E8%87%AA%E8%B1%AA%E6%84%9F/</id>
    <published>2022-03-24T14:04:12.000Z</published>
    <updated>2024-01-30T03:51:02.842Z</updated>
    
    
    <summary type="html">&lt;p&gt;最廉价的骄傲就是民族的自豪感。沾染上民族自豪感的人暴露出这一事实：这个人缺乏个人的、他能够引以为豪的素质。如果情况不是这样，他也就不至于抓住那些他和无数百万人所共有的东西为荣了。拥有突出个人素质的人会更加清晰地看到自己民族的缺点，因为这些缺点时刻就在自己的眼前，&lt;/p&gt;</summary>
    
    
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
    <category term="读书" scheme="https://lililib.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>QPST刷基带</title>
    <link href="https://lililib.github.io/QPST%E5%88%B7%E5%9F%BA%E5%B8%A6/"/>
    <id>https://lililib.github.io/QPST%E5%88%B7%E5%9F%BA%E5%B8%A6/</id>
    <published>2022-03-14T11:49:24.000Z</published>
    <updated>2024-01-30T03:51:02.641Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;昨天刷机后发现，双卡没有信号，查看系统基带版本显示未知，小米服务一直弹啥没有id什么的。&lt;/p&gt;
&lt;p&gt;尝试了很多方法，先记录一下过程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;线刷官方最新稳定版  </summary>
        
      
    
    
    
    
    <category term="搞机" scheme="https://lililib.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>OneShort</title>
    <link href="https://lililib.github.io/OneShort/"/>
    <id>https://lililib.github.io/OneShort/</id>
    <published>2022-03-07T13:27:34.000Z</published>
    <updated>2024-01-30T03:51:02.637Z</updated>
    
    
    <summary type="html">&lt;p&gt;你的任务是指导一个小孩穿过神秘的世界，去完成复活死去已久的太阳的使命。&lt;br&gt;……当然，事情永远不会那么简单。&lt;/p&gt;
&lt;p&gt;这个世界知道你的存在。&lt;/p&gt;
&lt;p&gt;后果是真实存在的。&lt;/p&gt;
&lt;p&gt;拯救世界或许不可行。&lt;/p&gt;
&lt;p&gt;你只有一次机会&lt;br&gt;&lt;img src=&quot;/OneShort/1646660812547.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="游戏" scheme="https://lililib.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>v2rayNG wifi正常翻墙用流量报context deadline exceeded错误</title>
    <link href="https://lililib.github.io/v2rayNG%20wifi%E6%AD%A3%E5%B8%B8%E7%BF%BB%E5%A2%99%E7%94%A8%E6%B5%81%E9%87%8F%E6%8A%A5context%20deadline%20exceeded%E9%94%99%E8%AF%AF/"/>
    <id>https://lililib.github.io/v2rayNG%20wifi%E6%AD%A3%E5%B8%B8%E7%BF%BB%E5%A2%99%E7%94%A8%E6%B5%81%E9%87%8F%E6%8A%A5context%20deadline%20exceeded%E9%94%99%E8%AF%AF/</id>
    <published>2022-02-14T06:17:02.000Z</published>
    <updated>2024-01-30T03:51:02.772Z</updated>
    
    
    <summary type="html">&lt;p&gt;&amp;emsp;&amp;emsp;刷了原生系统第一天，这个问题困扰了很久，测试了很多节点都如此。摸摸索索原来是手机APN设置有问题，随便试了一个APN就成功了.&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;</summary>
    
    
    
    
    <category term="搞机" scheme="https://lililib.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>request的post</title>
    <link href="https://lililib.github.io/request%E7%9A%84post/"/>
    <id>https://lililib.github.io/request%E7%9A%84post/</id>
    <published>2021-12-15T05:02:06.000Z</published>
    <updated>2024-01-30T03:51:02.764Z</updated>
    
    
    <summary type="html">&lt;p&gt;requests.post()  方法的使用：&lt;/p&gt;
&lt;p&gt;post方法简单使用&lt;/p&gt;
&lt;p&gt;　　1、带数据的post&lt;/p&gt;
&lt;p&gt;　　2、带header的post&lt;/p&gt;
&lt;p&gt;　　3、带json的post&lt;/p&gt;
&lt;p&gt;　　4、带参数的post&lt;/p&gt;
&lt;p&gt;　　5、普通文件上传&lt;/p&gt;
&lt;p&gt;　　6、定制化文件上传&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="https://lililib.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>建党伟业 读后感</title>
    <link href="https://lililib.github.io/%E3%80%8A%E5%BB%BA%E5%85%9A%E4%BC%9F%E4%B8%9A%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>https://lililib.github.io/%E3%80%8A%E5%BB%BA%E5%85%9A%E4%BC%9F%E4%B8%9A%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</id>
    <published>2021-03-27T14:09:02.000Z</published>
    <updated>2025-07-06T03:14:45.690Z</updated>
    
    
    <summary type="html">&lt;p&gt;《建党伟业》终于上映了。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;说终于，绝非我对这部由上百个外国人主演的电影有着哪样热切的期盼，只是觉得一部电影经过紧锣密鼓的大力宣传，调动了各行各业人们关注的目光，被提高到了无以复加的崇高地位——是青苗还是野草，到了该拿出来亮亮的时候了。&lt;/p&gt;</summary>
    
    
    
    
    <category term="有意思" scheme="https://lililib.github.io/tags/%E6%9C%89%E6%84%8F%E6%80%9D/"/>
    
  </entry>
  
  <entry>
    <title>一些想法</title>
    <link href="https://lililib.github.io/%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/"/>
    <id>https://lililib.github.io/%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</id>
    <published>2021-03-26T10:36:07.000Z</published>
    <updated>2024-01-30T03:51:02.794Z</updated>
    
    
    <summary type="html">&lt;p&gt;看到《毛泽东选集》里面一个案列，农民运动时除了斗地主之外还有一个很大的运动——破四旧。其中有一项勤俭节约，禁开酒席，禁买南货斋果送情。原因是工业产品价高，农产品极为价廉的原因，农民受商人剥削厉害，借以自卫的一个手段。由此想到，贫困，经济条件不好的地区常常有暴动，骚乱的一些原因。&lt;/p&gt;</summary>
    
    
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>湖北师范大学人脸爬取</title>
    <link href="https://lililib.github.io/%E6%B9%96%E5%8C%97%E5%B8%88%E8%8C%83%E5%A4%A7%E5%AD%A6%E4%BA%BA%E8%84%B8%E7%88%AC%E5%8F%96/"/>
    <id>https://lililib.github.io/%E6%B9%96%E5%8C%97%E5%B8%88%E8%8C%83%E5%A4%A7%E5%AD%A6%E4%BA%BA%E8%84%B8%E7%88%AC%E5%8F%96/</id>
    <published>2021-03-12T05:36:30.000Z</published>
    <updated>2025-07-06T03:14:45.691Z</updated>
    
    
    <summary type="html">&lt;p&gt;疫情期间宿舍安装了人脸识别门禁，要求登录一个网站上传人脸照片。对于有价值的信息我有很好的嗅觉（素颜女生嘿嘿(●ˇ∀ˇ●)），感觉可以查探查探…….&lt;/p&gt;</summary>
    
    
    
    
    <category term="爬虫" scheme="https://lililib.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="Python" scheme="https://lililib.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>小米刷机大概步骤</title>
    <link href="https://lililib.github.io/%E5%B0%8F%E7%B1%B3%E5%88%B7%E6%9C%BA%E5%A4%A7%E6%A6%82%E6%AD%A5%E9%AA%A4/"/>
    <id>https://lililib.github.io/%E5%B0%8F%E7%B1%B3%E5%88%B7%E6%9C%BA%E5%A4%A7%E6%A6%82%E6%AD%A5%E9%AA%A4/</id>
    <published>2021-02-28T07:17:22.000Z</published>
    <updated>2024-01-30T03:51:02.822Z</updated>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先打开fastboot 也就是解锁（直接谷歌）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装第三方rec，如果线刷不进去就先安装官方的开发版，获取root，安装twrp APP，在里面选择合适的rec进行直接安装（若是安装了不正确的版本rec会无限卡兔子且进入不了rec，此时只有线刷官方包再重复以上）&lt;/p&gt;</summary>
    
    
    
    
    <category term="搞机" scheme="https://lililib.github.io/tags/%E6%90%9E%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>回溯，动态规划-求n个数中和为k的最少解</title>
    <link href="https://lililib.github.io/%E5%9B%9E%E6%BA%AF%EF%BC%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E6%B1%82n%E4%B8%AA%E6%95%B0%E4%B8%AD%E5%92%8C%E4%B8%BAk%E7%9A%84%E6%9C%80%E5%B0%91%E8%A7%A3/"/>
    <id>https://lililib.github.io/%E5%9B%9E%E6%BA%AF%EF%BC%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-%E6%B1%82n%E4%B8%AA%E6%95%B0%E4%B8%AD%E5%92%8C%E4%B8%BAk%E7%9A%84%E6%9C%80%E5%B0%91%E8%A7%A3/</id>
    <published>2020-12-29T13:24:08.000Z</published>
    <updated>2024-01-30T03:51:02.806Z</updated>
    
    
    <summary type="html">&lt;p&gt;如题：给定若干正整数，从中选出若干数，使他们的和恰好为k，要求找选择元素最少的解&lt;/p&gt;
&lt;p&gt;##动态规划&lt;br&gt;可以看成0-1背包问题，物品价值与重量为数本身，背包容量为k，网格中的值更新时需要记录是由哪些值所引起的改变。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>科幻的常见类型</title>
    <link href="https://lililib.github.io/%E7%A7%91%E5%B9%BB%E7%9A%84%E5%B8%B8%E8%A7%81%E7%B1%BB%E5%9E%8B/"/>
    <id>https://lililib.github.io/%E7%A7%91%E5%B9%BB%E7%9A%84%E5%B8%B8%E8%A7%81%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-12-26T03:22:08.000Z</published>
    <updated>2024-01-30T03:51:02.856Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;test&lt;/p&gt;
</summary>
        
      
    
    
    
    
    <category term="读书" scheme="https://lililib.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>手撕中缀表达式转后缀表达式（逆波兰式）</title>
    <link href="https://lililib.github.io/%E6%89%8B%E6%92%95%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F%EF%BC%89/"/>
    <id>https://lililib.github.io/%E6%89%8B%E6%92%95%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F%EF%BC%89/</id>
    <published>2020-12-26T02:25:40.000Z</published>
    <updated>2024-01-30T03:51:02.836Z</updated>
    
    
    <summary type="html">&lt;p&gt;中缀表达式转后缀表达式转化后只是&lt;strong&gt;操作符的次序变了，操作数的次序并没有变&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;唯一知道一点&lt;strong&gt;a+b转后缀表达式为ab+,乘法除法都雷同&lt;/strong&gt;就可了其他运算次序为从左到右依次运算，先运算的还是先运算（操作符优先程度高的，如乘法优先加法之类的）&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>n后问题</title>
    <link href="https://lililib.github.io/N%E5%90%8E%E9%97%AE%E9%A2%98/"/>
    <id>https://lililib.github.io/N%E5%90%8E%E9%97%AE%E9%A2%98/</id>
    <published>2020-12-23T12:36:11.000Z</published>
    <updated>2024-01-30T03:51:02.636Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在n乘以n格的棋盘上放置彼此不受攻击的n个皇后，按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。n后问题等价于在n*n格的棋盘上放置n个皇后，任何2个皇后不放在同一行或同一列或同一斜线上。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;与图着色问题思考方式大致相同，需要一个一维数组记录皇后放置棋盘上的位置，以数组下标为棋盘上的行，数组的值为棋盘的列，进行&lt;strong&gt;每列&lt;/strong&gt;试值，检查其放置是否合法，不合法回溯，合法进行下一行。递归过程为放置下一行。对于棋盘的不在同一斜线的判定，想象等腰直角三角形的判定，两直角边相等。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>单源最短路径（Dijkstra算法）</title>
    <link href="https://lililib.github.io/%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%EF%BC%88Dijkstra%E7%AE%97%E6%B3%95%EF%BC%89/"/>
    <id>https://lililib.github.io/%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%EF%BC%88Dijkstra%E7%AE%97%E6%B3%95%EF%BC%89/</id>
    <published>2020-12-23T09:32:59.000Z</published>
    <updated>2024-01-30T03:51:02.802Z</updated>
    
    
    <summary type="html">&lt;p&gt;迪杰斯特拉算法(Dijkstra)是由荷兰计算机科学家狄克斯特拉于1959 年提出的，因此又叫狄克斯特拉算法。是从一个顶点到其余各顶点的最短路径算法（单源最短路径），解决的是有权图中最短路径问题，采用贪心的策略。&lt;br&gt;如下图：求顶点1到顶点5的最短路径长度是多少.&lt;br&gt;&lt;img src=&quot;/%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%EF%BC%88Dijkstra%E7%AE%97%E6%B3%95%EF%BC%89/1608718378166.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>哈夫曼编码</title>
    <link href="https://lililib.github.io/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/"/>
    <id>https://lililib.github.io/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/</id>
    <published>2020-12-20T12:19:49.000Z</published>
    <updated>2024-01-30T03:51:02.804Z</updated>
    
    
    <summary type="html">&lt;p&gt;构造哈夫曼树时使用双亲孩子的存储结构，需要数据有： 权重，他们母亲是谁，是否加入了哈夫曼树，他们左孩子与右孩子又是谁？&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单节点的初始化入哈夫曼树中，初始化2*n-1个节点&lt;/li&gt;
&lt;li&gt;寻找两个权重最小且还没有加入树中的节点进行构造哈夫曼树，不断重复此过程（构造过程中存储结构中变动的信息都需要更新）其实这寻找两个权值最小的节点挺难的，困了好长时间&amp;#x2F;(ㄒoㄒ)&amp;#x2F;~~&lt;/li&gt;
&lt;li&gt;根据构造的树，解析析出哈夫曼编码&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;双亲孩子节点&quot;&gt;&lt;a href=&quot;#双亲孩子节点&quot; class=&quot;headerlink&quot; title=&quot;双亲孩子节点&quot;&gt;&lt;/a&gt;双亲孩子节点&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/1608476724594.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>0-1背包问题</title>
    <link href="https://lililib.github.io/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://lililib.github.io/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</id>
    <published>2020-12-19T10:06:41.000Z</published>
    <updated>2024-01-30T03:51:02.955Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/./0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98-1703917426600.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;0-1背包问题：假设你是个小偷，背着一个可装4磅东西的背包。你可盗窃的商品有如下3件&lt;br&gt;&lt;img src=&quot;/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/1608372494998.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;为了让盗窃的商品价值最高，你该选择哪些商品？&lt;/p&gt;
&lt;p&gt;每个动态规划算法都从一个网格开始，背包问题的网格如下：&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://lililib.github.io/categories/Diary/"/>
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>冒泡，二分，合并，快速排序</title>
    <link href="https://lililib.github.io/%E5%86%92%E6%B3%A1%EF%BC%8C%E4%BA%8C%E5%88%86%EF%BC%8C%E5%90%88%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    <id>https://lililib.github.io/%E5%86%92%E6%B3%A1%EF%BC%8C%E4%BA%8C%E5%88%86%EF%BC%8C%E5%90%88%E5%B9%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</id>
    <published>2020-12-19T02:36:36.000Z</published>
    <updated>2024-01-30T03:51:02.801Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;二分排序法&quot;&gt;&lt;a href=&quot;#二分排序法&quot; class=&quot;headerlink&quot; title=&quot;二分排序法&quot;&gt;&lt;/a&gt;二分排序法&lt;/h2&gt;&lt;p&gt;二分查找法主要是解决在“一堆数中找出指定的数”这类问题。&lt;/p&gt;
&lt;p&gt;而想要应用二分查找法，这“一堆数”必须有以下特征：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;存储在数组中&lt;/li&gt;
&lt;li&gt;有序排列&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二分查找思路，&lt;strong&gt;在一个有序的数组中（从小到大排列），与中间的那个数作比较，若相等，则找到，若小于中间的数则继续在左边那一块重复操作，反之重复右边的那块操作。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>图的着色问题（地图着色问题）</title>
    <link href="https://lililib.github.io/%E5%9B%BE%E7%9A%84%E7%9D%80%E8%89%B2%E9%97%AE%E9%A2%98/"/>
    <id>https://lililib.github.io/%E5%9B%BE%E7%9A%84%E7%9D%80%E8%89%B2%E9%97%AE%E9%A2%98/</id>
    <published>2020-12-18T11:33:33.000Z</published>
    <updated>2024-01-30T03:51:02.806Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp; 给定无向连通图G&amp;#x3D;(V, E)和m种不同的颜色，用这些颜色为图G的各顶点着色，每个顶点着一种颜色。是否有一种着色法使G中相邻的两个顶点有不同的颜色?&lt;br&gt;&amp;emsp;&amp;emsp; 这个问题是图的m可着色判定问题。若一个图最少需要m种颜色才能使图中每条边连接的两个顶点着不同颜色，则称这个数m为该图的色数。求一个图的色数m的问题称为图的m可着色优化问题。&lt;br&gt;&amp;emsp;&amp;emsp; 编程计算：给定图G&amp;#x3D;(V, E)和m种不同的颜色，找出所有不同的着色法和着色总数。&lt;br&gt;简而言之：给一个图，&lt;strong&gt;要求相连接的顶点颜色不能相同&lt;/strong&gt;，有m种颜色可以进行着色，可以有多少方案。&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>小记</title>
    <link href="https://lililib.github.io/%E5%B0%8F%E8%AE%B0/"/>
    <id>https://lililib.github.io/%E5%B0%8F%E8%AE%B0/</id>
    <published>2020-12-18T10:13:15.000Z</published>
    <updated>2024-01-30T03:51:02.822Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;2020-12-18 18:31:17</summary>
        
      
    
    
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>最长公共子序列</title>
    <link href="https://lililib.github.io/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>https://lililib.github.io/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</id>
    <published>2020-12-17T14:23:12.000Z</published>
    <updated>2024-01-30T03:51:02.836Z</updated>
    
    
    <summary type="html">&lt;p&gt;给定两个字符串 text1 和 text2，返回这两个字符串的最长公共子序列的长度。&lt;/p&gt;
&lt;p&gt;一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。&lt;br&gt;例如，”ace” 是 “abcde” 的子序列，但 “aec” 不是 “abcde” 的子序列。两个字符串的「公共子序列」是这两个字符串所共同拥有的子序列。求解使用费曼算法（Feynman algorithm）&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Karatsuba大数乘法</title>
    <link href="https://lililib.github.io/Karatsuba%E5%A4%A7%E6%95%B0%E4%B9%98%E6%B3%95/"/>
    <id>https://lililib.github.io/Karatsuba%E5%A4%A7%E6%95%B0%E4%B9%98%E6%B3%95/</id>
    <published>2020-12-16T06:06:01.000Z</published>
    <updated>2024-01-30T03:51:02.636Z</updated>
    
    
    <summary type="html">&lt;p&gt;Karatsuba算法是一种快速相乘算法，它由俄罗斯数学家Anatolii Alexeevitch Karatsuba于1960年提出并于1962年发表。普通乘法的复杂度是n2，而Karatsuba算法的复杂度仅为3n^log3≈3n^1.585.&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>大数加减法</title>
    <link href="https://lililib.github.io/%E5%A4%A7%E6%95%B0%E5%8A%A0%E5%87%8F%E6%B3%95/"/>
    <id>https://lililib.github.io/%E5%A4%A7%E6%95%B0%E5%8A%A0%E5%87%8F%E6%B3%95/</id>
    <published>2020-12-15T14:41:13.000Z</published>
    <updated>2024-01-30T03:51:02.808Z</updated>
    
    
    <summary type="html">&lt;p&gt;大数加减法&lt;strong&gt;模拟竖式计算&lt;/strong&gt;的累加累减技巧，在数组中进行进位借位操作。时间复杂度都为O(1)&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="https://lililib.github.io/markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://lililib.github.io/markdown%E8%AF%AD%E6%B3%95/</id>
    <published>2020-12-15T13:07:53.000Z</published>
    <updated>2024-01-30T03:51:02.757Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;这是一级标题&quot;&gt;&lt;a href=&quot;#这是一级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一级标题&quot;&gt;&lt;/a&gt;这是一级标题&lt;/h1&gt;&lt;h2 id=&quot;这是二级标题&quot;&gt;&lt;a href=&quot;#这是二级标题&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>大数乘法</title>
    <link href="https://lililib.github.io/%E5%A4%A7%E6%95%B0%E4%B9%98%E6%B3%95/"/>
    <id>https://lililib.github.io/%E5%A4%A7%E6%95%B0%E4%B9%98%E6%B3%95/</id>
    <published>2020-12-15T12:56:44.000Z</published>
    <updated>2024-01-30T03:51:02.807Z</updated>
    
    
    <summary type="html">&lt;p&gt;所谓大数相乘（Multiplication algorithm），就是指数字比较大，相乘的结果超出了基本类型的表示范围，所以这样的数不能够直接做乘法运算。这时候可以用小学学的&lt;strong&gt;乘法竖式累加模拟乘法&lt;/strong&gt;，结果储存在数组中。时间复杂度为O(2)&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
    <category term="算法" scheme="https://lililib.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Chrome中请求头转为字典类型</title>
    <link href="https://lililib.github.io/Chrome%E4%B8%AD%E8%AF%B7%E6%B1%82%E5%A4%B4%E8%BD%AC%E4%B8%BA%E5%AD%97%E5%85%B8%E7%B1%BB%E5%9E%8B/"/>
    <id>https://lililib.github.io/Chrome%E4%B8%AD%E8%AF%B7%E6%B1%82%E5%A4%B4%E8%BD%AC%E4%B8%BA%E5%AD%97%E5%85%B8%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-12-05T14:18:35.000Z</published>
    <updated>2024-01-30T03:51:02.636Z</updated>
    
    
    <summary type="html">&lt;p&gt;请求头一个一个加引号太麻烦了，python处理为字典型数据&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="https://lililib.github.io/tags/Python/"/>
    
    <category term="工具" scheme="https://lililib.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>漫画柜《鬼灭之刃》爬取</title>
    <link href="https://lililib.github.io/%E6%BC%AB%E7%94%BB%E6%9F%9C%E3%80%8A%E9%AC%BC%E7%81%AD%E4%B9%8B%E5%88%83%E3%80%8B%E7%88%AC%E5%8F%96/"/>
    <id>https://lililib.github.io/%E6%BC%AB%E7%94%BB%E6%9F%9C%E3%80%8A%E9%AC%BC%E7%81%AD%E4%B9%8B%E5%88%83%E3%80%8B%E7%88%AC%E5%8F%96/</id>
    <published>2020-12-05T13:12:45.000Z</published>
    <updated>2024-01-30T03:51:02.854Z</updated>
    
    
    <summary type="html">&lt;p&gt;漫画柜没有下载功能，想下载里面的漫画只有一张张自己下载了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置chrome浏览器无界面模式，更节省内存资源&lt;/li&gt;
&lt;li&gt;os库判断路径是否存在，不存在则创建&lt;/li&gt;
&lt;li&gt;多线程下载</summary>
    
    
    
    
    <category term="爬虫" scheme="https://lililib.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="Python" scheme="https://lililib.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>《钢之炼金术师》</title>
    <link href="https://lililib.github.io/%E3%80%8A%E9%92%A2%E4%B9%8B%E7%82%BC%E9%87%91%E6%9C%AF%E5%B8%88%E3%80%8B/"/>
    <id>https://lililib.github.io/%E3%80%8A%E9%92%A2%E4%B9%8B%E7%82%BC%E9%87%91%E6%9C%AF%E5%B8%88%E3%80%8B/</id>
    <published>2020-12-03T08:43:44.000Z</published>
    <updated>2024-01-30T03:51:02.793Z</updated>
    
    
    <summary type="html">&lt;p&gt;人没有什么牺牲的话就什么都得不到，&lt;/p&gt;</summary>
    
    
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>疑邻盗斧</title>
    <link href="https://lililib.github.io/%E7%96%91%E9%82%BB%E7%9B%97%E6%96%A7/"/>
    <id>https://lililib.github.io/%E7%96%91%E9%82%BB%E7%9B%97%E6%96%A7/</id>
    <published>2020-12-02T15:02:29.000Z</published>
    <updated>2024-01-30T03:51:02.856Z</updated>
    
    
    <summary type="html">&lt;p&gt;人有亡斧者，意其邻之子。&lt;/p&gt;</summary>
    
    
    
    
    <category term="小记" scheme="https://lililib.github.io/tags/%E5%B0%8F%E8%AE%B0/"/>
    
    <category term="读书" scheme="https://lililib.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>什么是值传递，什么是引用传递。为什么说Java中只有值传递。</title>
    <link href="https://lililib.github.io/%E5%80%BC%E4%BC%A0%E9%80%92/"/>
    <id>https://lililib.github.io/%E5%80%BC%E4%BC%A0%E9%80%92/</id>
    <published>2020-12-01T00:49:34.000Z</published>
    <updated>2024-01-30T03:51:02.797Z</updated>
    
    
    <summary type="html">&lt;p&gt;关于这个问题，在StackOverflow上也引发过广泛的讨论，看来很多程序员对于这个问题的理解都不尽相同，甚至很多人理解的是错误的。还有的人可能知道Java中的参数传递是值传递，但是说不出来为什么。&lt;/p&gt;
&lt;p&gt;在开始深入讲解之前，有必要纠正一下大家以前的那些错误看法了。如果你有以下想法，那么你有必要好好阅读本文。&lt;/p&gt;
&lt;p&gt;错误理解一：值传递和引用传递，区分的条件是传递的内容，如果是个值，就是值传递。如果是个引用，就是引用传递。&lt;/p&gt;
&lt;p&gt;错误理解二：Java是引用传递。&lt;/p&gt;
&lt;p&gt;错误理解三：传递的参数如果是普通类型，那就是值传递，如果是对象，那就是引用传递&lt;/p&gt;</summary>
    
    
    
    <category term="技术" scheme="https://lililib.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="java" scheme="https://lililib.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>习惯的力量</title>
    <link href="https://lililib.github.io/%E4%B9%A0%E6%83%AF%E7%9A%84%E5%8A%9B%E9%87%8F/"/>
    <id>https://lililib.github.io/%E4%B9%A0%E6%83%AF%E7%9A%84%E5%8A%9B%E9%87%8F/</id>
    <published>2020-11-24T07:17:01.000Z</published>
    <updated>2024-01-30T03:51:02.796Z</updated>
    
    
    <summary type="html">&lt;p&gt;两条小鱼在游泳，恰好看到一条大鱼在往另一个方向游，这条大鱼对这群小鱼点头致意说，‘早上好，孩子们，今天的水怎样？’两条小鱼继续往前游了一点儿，最后其中一条看着另一条说，‘水是什么东西啊？’”&lt;/p&gt;
&lt;p&gt;水就是习惯，我们每天都被不假思索的选择和无形的决定包围着，而你只要看看它们，你就会发现它们….&lt;/p&gt;</summary>
    
    
    
    
    <category term="读书" scheme="https://lililib.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>算法(第四版)-1.3.14答案</title>
    <link href="https://lililib.github.io/%E3%80%8A%E7%AE%97%E6%B3%95%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%89%88%EF%BC%89%E3%80%8B/"/>
    <id>https://lililib.github.io/%E3%80%8A%E7%AE%97%E6%B3%95%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%89%88%EF%BC%89%E3%80%8B/</id>
    <published>2020-11-22T06:10:26.000Z</published>
    <updated>2024-01-30T03:51:02.793Z</updated>
    
    
    <summary type="html">&lt;p&gt;算法(第四版)-1.3.14 编写一个类ResizingArrayQueueOfStrings，使用定长数组实现队列的抽象，然后扩展实现，使用调整数组的方法突破大小的限制。&lt;/p&gt;</summary>
    
    
    
    
    <category term="《算法(第四版)》" scheme="https://lililib.github.io/tags/%E3%80%8A%E7%AE%97%E6%B3%95-%E7%AC%AC%E5%9B%9B%E7%89%88-%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>uu加速器抓包领取ow</title>
    <link href="https://lililib.github.io/%E5%A6%82%E4%BD%95%E6%8C%A4%E8%BF%9Buu%E5%8A%A0%E9%80%9F%E5%99%A8%E7%99%BD%E5%AB%96ow/"/>
    <id>https://lililib.github.io/%E5%A6%82%E4%BD%95%E6%8C%A4%E8%BF%9Buu%E5%8A%A0%E9%80%9F%E5%99%A8%E7%99%BD%E5%AB%96ow/</id>
    <published>2019-07-18T07:29:25.000Z</published>
    <updated>2024-01-30T03:51:02.809Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近uu加速器可白嫖《守望先锋》，啥子1个月内，用uu加速累计24h就可以白嫖了，奈何太多白嫖怪，每日11：00放送资源时，服务器就爆炸了，好不容易进去后，又显示请你明天再来，…(⊙_⊙;)…这就很让人炸裂了….&lt;/p&gt;</summary>
    
    
    
    
    <category term="Python" scheme="https://lililib.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>战恋雪网站的爬取实战</title>
    <link href="https://lililib.github.io/%E6%88%98%E6%81%8B%E9%9B%AA/"/>
    <id>https://lililib.github.io/%E6%88%98%E6%81%8B%E9%9B%AA/</id>
    <published>2019-06-07T01:31:25.000Z</published>
    <updated>2024-01-30T03:51:02.822Z</updated>
    
    
    <summary type="html">&lt;p&gt;因为要释放掉那些干扰我理智思考的东西，所以一直在苦苦找寻刘备(皇叔)(づ￣ 3￣)づ网站，直到一次我搜索《战恋雪》时我发现了这个网站&lt;a href=&quot;https://www.zhanlianxue.net/&quot;&gt;战恋雪&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    
    <category term="爬虫" scheme="https://lililib.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>500px美图爬取</title>
    <link href="https://lililib.github.io/500px%E7%BE%8E%E5%9B%BE%E7%88%AC%E5%8F%96/"/>
    <id>https://lililib.github.io/500px%E7%BE%8E%E5%9B%BE%E7%88%AC%E5%8F%96/</id>
    <published>2019-04-12T10:11:25.000Z</published>
    <updated>2024-01-30T03:51:02.624Z</updated>
    
    
    <summary type="html">&lt;p&gt;前天在逛9gag时看到了一个血脉膨胀的图，在评论区溯源于是找到了&lt;a href=&quot;https://500px.com/david-foto&quot;&gt;500px&lt;/a&gt;这个网站，根据链接进去一看，乖乖~！发现一个宝藏了，这个作者拍摄的完全是我喜欢的类型，文文艺艺，热情奔放，含而不漏，张弛有度(๐॔˃̶ᗜ˂̶๐॓)。&lt;br&gt;就是下图这样子！&lt;/p&gt;</summary>
    
    
    
    
    <category term="爬虫" scheme="https://lililib.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>关于</title>
    <link href="https://lililib.github.io/about/"/>
    <id>https://lililib.github.io/about/</id>
    <published>2019-01-25T11:09:48.000Z</published>
    <updated>2025-08-30T16:08:21.637Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;欢迎来到我的小站呀，很高兴遇见你！🤝&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;🏠-关于本站&quot;&gt;&lt;a href=&quot;#🏠-关于本站&quot; class=&quot;headerlink&quot; title=&quot;🏠 关于本站&quot;&gt;&lt;/a&gt;🏠</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
